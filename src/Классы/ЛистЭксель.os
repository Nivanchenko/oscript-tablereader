Перем Имя Экспорт;
Перем Номер Экспорт;
Перем Книга;
Перем Файл;
Перем Значения;

Перем Высота;
Перем Ширина;
Перем ПерваяСтрока;
Перем ПерваяКолонка;

Процедура ПриСозданииОбъекта(ИмяЛиста, НомерЛиста, ПутьКФайлу, КнигаВладелец)
	Файл = ПутьКФайлу;
	Имя = ИмяЛиста;
	Номер = НомерЛиста;
	Книга = КнигаВладелец;

	ИнициализироватьЗначения();

КонецПроцедуры

Функция Высота() Экспорт
	Возврат Высота; 
КонецФункции

Функция Ширина() Экспорт
	Возврат Ширина; 
КонецФункции

Функция ПерваяСтрока() Экспорт
	Возврат ПерваяСтрока; 
КонецФункции

Функция ПерваяКолонка() Экспорт
	Возврат ПерваяКолонка; 
КонецФункции

Функция ТаблицаПоДиапазону(Диапазон) Экспорт
	РазделенныйДиапазон = СтрРазделить(Диапазон, ":");
	Если Не РазделенныйДиапазон.Количество() = 2 Тогда
		ВызватьИсключение "Не корректно передан диапазон";
	КонецЕсли;

	КоординатыНачала = КоординатыПоАдресу(РазделенныйДиапазон[0]);
	КоординатыКонца = КоординатыПоАдресу(РазделенныйДиапазон[1]);
	
	Возврат ТаблицаПоКоординатам(КоординатыНачала.Строка, КоординатыНачала.Колонка, 
									КоординатыКонца.Строка, КоординатыКонца.Колонка);
	
КонецФункции

Функция Таблица() Экспорт
	Возврат ТаблицаПоКоординатам(ПерваяСтрока(), ПерваяКолонка(), Высота(), Ширина());
КонецФункции

Функция ТаблицаПоКоординатам(СтрокаНачало, КолонкаНачало, СтрокаКонец, КолонкаКонец) Экспорт
	Колонки = Новый Соответствие();
	Результат = Новый ТаблицаЗначений();

	Счетчик = 1;

	Для ТекКолонка = КолонкаНачало По КолонкаКонец Цикл
		ИмяКолонки = СтрШаблон("Колонка%1", Счетчик);
		Колонки.Вставить(ТекКолонка, ИмяКолонки);
		Счетчик = Счетчик +1;
		Результат.Колонки.Добавить(ИмяКолонки);
	КонецЦикла;

	Для ТекСтрока = СтрокаНачало По СтрокаКонец Цикл
		НоваяСтрока = Результат.Добавить();
		Для ТекКолонка = КолонкаНачало По КолонкаКонец Цикл
			ИмяКолонки = Колонки[ТекКолонка];
			НоваяСтрока[ИмяКолонки] = ЗначениеЯчейкиПоКоординатам(ТекСтрока, ТекКолонка);
		КонецЦикла;
	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция ЗначениеЯчейкиПоАдресу(АдресЯчейки) Экспорт
	
	Строки = Значения.НайтиСтроки(Новый Структура("ИмяЯчейки", АдресЯчейки));

	Если Строки.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат Строки[0].Значение;
	КонецЕсли;

КонецФункции

Функция ЗначениеЯчейкиПоКоординатам(НомерСтроки, НомерКолонки) Экспорт
	
	Строки = Значения.НайтиСтроки(Новый Структура("НомерСтроки, НомерКолонки", НомерСтроки, НомерКолонки));

	Если Строки.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат Строки[0].Значение;
	КонецЕсли;

КонецФункции

Процедура Прочитать() Экспорт
	ИнициализироватьЗначения();
	
	Чтение = Новый ЧтениеXML();
	Чтение.ОткрытьФайл(Файл);

	ИмяЯчейки = "";
	ТипЗначения = Неопределено;
	Стиль = "";

	Пока Чтение.Прочитать() Цикл
		//Обработка строки
		Если Чтение.Имя = "c" и Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Атрибуты = ПрочитатьАтрибуты(Чтение);
			ИмяЯчейки = Атрибуты["r"];
			ТипЗначения = Атрибуты["t"];
			Стиль = Атрибуты["s"];
		ИначеЕсли Чтение.Имя = "v" и Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Чтение.Прочитать(); //Зайдем в узел
			Если ТипЗначения = "s" Тогда
				Значение = Книга.ПолучитьОбщуюСтроку(Строка(Чтение.Значение));
			ИначеЕсли ТипЗначения = "b" Тогда
				Значение = Чтение.Значение = "1";
			ИначеЕсли ЗначениеЗаполнено(Стиль) И Книга.ЭтоСтильДаты(Стиль) Тогда
				Значение = ДатаОтсчета() + Число(Чтение.Значение) * 86400;
			Иначе
				Значение = Чтение.Значение;
			КонецЕсли;
			Координаты = КоординатыПоАдресу(ИмяЯчейки);
			ДобавитьЗначение(Координаты.Строка, Координаты.Колонка, ИмяЯчейки, Значение);
		КонецЕсли;

	КонецЦикла;

	Чтение.Закрыть();

	ПрочитатьГраницыТаблицы();

КонецПроцедуры

Процедура ПрочитатьГраницыТаблицы()

	Если Значения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	СтрокаЗначения = Значения[0];

	Высота = СтрокаЗначения.НомерСтроки;
	Ширина = СтрокаЗначения.НомерКолонки;
	ПерваяСтрока = СтрокаЗначения.НомерСтроки;
	ПерваяКолонка = СтрокаЗначения.НомерКолонки;

	Для Каждого ТекСтрокаЗначения из Значения Цикл
		Высота = Макс(Высота, ТекСтрокаЗначения.НомерСтроки);
		ПерваяСтрока = Мин(ПерваяСтрока, ТекСтрокаЗначения.НомерСтроки);
		
		Ширина = Макс(Ширина, ТекСтрокаЗначения.НомерКолонки);
		ПерваяКолонка = Мин(ПерваяКолонка, ТекСтрокаЗначения.НомерКолонки);
	КонецЦикла;

КонецПроцедуры

Процедура ИнициализироватьЗначения()
	Значения = Новый ТаблицаЗначений();
	Значения.Колонки.Добавить("НомерСтроки");
	Значения.Колонки.Добавить("НомерКолонки");
	Значения.Колонки.Добавить("ИмяЯчейки");
	Значения.Колонки.Добавить("Значение");

	Высота = 0;
	Ширина = 0;
	ПерваяСтрока = 0;
	ПерваяКолонка = 0;
КонецПроцедуры

Процедура ДобавитьЗначение(НомерСтроки, НомерКолонки, ИмяЯчейки, Значение)
	НоваяСтрока = Значения.Добавить();
	НоваяСтрока.НомерСтроки = НомерСтроки;
	НоваяСтрока.НомерКолонки = НомерКолонки;
	НоваяСтрока.ИмяЯчейки = ИмяЯчейки;
	НоваяСтрока.Значение = Значение;	
КонецПроцедуры

Функция ДатаОтсчета()
	Возврат Дата("18991230");
КонецФункции

Функция КоординатыПоАдресу(АдресЯчейки)

	АдресКолонки = "";
	НомерСтроки = "";

	Для Счетчик = 1 По СтрДлина(АдресЯчейки) Цикл
		ТекСимвол = Сред(АдресЯчейки, Счетчик, 1);
		Если ЭтоЦифра(ТекСимвол) Тогда
			НомерСтроки = НомерСтроки + ТекСимвол;
		Иначе
			АдресКолонки = АдресКолонки + ТекСимвол;
		КонецЕсли;
	КонецЦикла;

	Результат = Новый Структура("Колонка, Строка", БуквенныйАдресВЦифру(АдресКолонки), Число(НомерСтроки));

	Возврат Результат;
КонецФункции

Функция БуквенныйАдресВЦифру(БуквенныйАдрес)
	Алфавит = ВРег("abcdefghijklmnopqrstuvwxyz");
	РазмерАлфавита = СтрДлина(Алфавит);
	ПорядокСимволов = Новый Соответствие();

	Для Счетчик = 1 По РазмерАлфавита Цикл
		ТекСимвол = Сред(Алфавит, Счетчик, 1);
		ПорядокСимволов.Вставить(ТекСимвол, Счетчик);
	КонецЦикла;

	НомерКолонки = 0;
	Для Счетчик = 1 По СтрДлина(БуквенныйАдрес) Цикл
		ТекСимвол = Сред(БуквенныйАдрес, Счетчик, 1);
		НомерКолонки = НомерКолонки + ПорядокСимволов[ТекСимвол] + (РазмерАлфавита * (Счетчик - 1));
	КонецЦикла;

	Возврат НомерКолонки;
КонецФункции

Функция ЭтоЦифра(Символ)

	СтрокаЦифр = "1234567890";
	
	Возврат СтрНайти(СтрокаЦифр, Символ) > 0;
	
КонецФункции

Функция ПрочитатьАтрибуты(Чтение)
	Атрибуты = Новый Соответствие();
	Пока Чтение.ПрочитатьАтрибут() Цикл
		Атрибуты.Вставить(Чтение.Имя, Чтение.Значение);
	КонецЦикла;
	Возврат Атрибуты;
КонецФункции